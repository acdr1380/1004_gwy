import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { R } from 'app/entity/vo/R';
import { NzMessageService } from 'ng-zorro-antd/message';
import { filter, map, tap } from 'rxjs/operators';

@Injectable({
    providedIn: 'root',
})
export class ExamYearService {
    // api/gl-service-data-civil
    constructor(private http: HttpClient, private message: NzMessageService) {}

    /**
     * 添加年度考批次
     * @param data 批次参数
     */
    examYearInsert(data: any) {
        const url = 'api/gl-service-data-civil/v1/data/annual/assess/batch/insert';
        return this.http.post<R>(url, data).pipe(
            tap(json => {
                if (json.code === 0) {
                    this.message.success('保存成功！');
                } else {
                    this.message.error(json.msg || '出错啦！');
                }
            }),
            filter(json => json.code === 0),
            map(json => json.data)
        );
    }

    /**
     * 删除年度考核批次
     * @param data 删除批次ID
     */
    examYearDelete(data: any) {
        const url = 'api/gl-service-data-civil/v1/data/annual/assess/batch/delete';
        return this.http.post<R>(url, data).pipe(
            tap(json => {
                if (json.code === 0) {
                    this.message.success('删除成功！');
                } else {
                    this.message.error(json.msg || '出错啦！');
                }
            }),
            filter(json => json.code === 0),
            map(json => json)
        );
    }

    /**
     * 修改年度考核批次
     * @param data 修改参数
     */
    examYearUpdata(data: any) {
        const url = 'api/gl-service-data-civil/v1/data/annual/assess/batch/update';
        return this.http.post<R>(url, data).pipe(
            tap(json => {
                if (json.code === 0) {
                    this.message.success('保存成功！');
                } else {
                    this.message.error(json.msg || '出错啦！');
                }
            }),
            filter(json => json.code === 0),
            map(json => json.data)
        );
    }

    /**
     * 根据Id查询批次信息
     * @param data 查询参数
     */
    examYearSelectOne(data: any) {
        const url = 'api/gl-service-data-civil/v1/data/annual/assess/batch/selectOne';
        return this.http.post<R>(url, data).pipe(
            tap(json => {
                if (json.code !== 0) {
                    this.message.error(json.msg || '出错啦！');
                }
            }),
            filter(json => json.code === 0),
            map(json => json)
        );
    }

    /**
     * 根据考核年份查询考核业务
     * @param data { "ASSESS_YEAR":"2020" }
     */
    examYearSelectByYear(data: any) {
        const url = 'api/gl-service-data-civil/v1/data/annual/assess/batch/selectPageByYear';
        return this.http.post<R>(url, data).pipe(
            tap(json => {
                if (json.code !== 0) {
                    this.message.error(json.msg || '出错啦！');
                }
            }),
            filter(json => json.code === 0),
            map(json => json.data)
        );
    }

    /** 查询所有年份 */
    examYearSelectAllYear() {
        const url = 'api/gl-service-data-civil/v1/data/annual/assess/batch/selectAllYear';
        return this.http.get<R>(url).pipe(
            tap(json => {
                if (json.code !== 0) {
                    this.message.error(json.msg || '出错啦！');
                }
            }),
            filter(json => json.code === 0),
            map(json => json.data.map(x => parseInt(x.ASSESS_YEAR)))
        );
    }

    examYearSelectWflist(data: any) {
        const url = 'api/gl-service-data-civil/v1/data/annual/assess/relation/selectWfListBy';
        return this.http.post<R>(url, data).pipe(
            tap(json => {
                if (json.code !== 0) {
                    this.message.error(json.msg || '出错啦！');
                }
            }),
            filter(json => json.code === 0),
            map(json => json.data)
        );
    }

    /**
     * 保存选择发送对象
     * @param data 保存参数
     */
    examYearSaveUnit(data: any) {
        const url = 'api/gl-service-data-civil/v1/data/annual/assess/relation/insertList';
        return this.http.post<R>(url, data).pipe(
            tap(json => {
                if (json.code !== 0) {
                    this.message.error(json.msg || '出错啦！');
                }
            }),
            filter(json => json.code === 0),
            map(json => json.data)
        );
    }
    /**
     * 保存选择发送对象
     * @param data 保存参数
     */
    examYearDelUnit(data: any) {
        const url = 'api/gl-service-data-civil/v1/data/annual/assess/relation/delete';
        return this.http.post<R>(url, data).pipe(
            tap(json => {
                if (json.code !== 0) {
                    this.message.error(json.msg || '出错啦！');
                } else {
                    this.message.success('删除成功！');
                }
            }),
            filter(json => json.code === 0),
            map(json => json.data)
        );
    }

    /**
     * 加载已选择对象
     * @param data 参数对象
     */
    examYearInitUnit(data: any) {
        const url = 'api/gl-service-data-civil/v1/data/annual/assess/relation/selectDeployList';
        return this.http.post<R>(url, data).pipe(
            tap(json => {
                if (json.code !== 0) {
                    this.message.error(json.msg || '出错啦！');
                }
            }),
            filter(json => json.code === 0),
            map(json => json.data)
        );
    }

    //#region table
    /**
     * 获取已选择人员表
     * @param data 参数
     */
    examYearLoadPsn(data: any) {
        const url = 'api/gl-service-data-civil/v1/data/annual/assess/data/selectPageListByA2502';
        return this.http.post<R>(url, data).pipe(
            tap(json => {
                if (json.code !== 0) {
                    this.message.error(json.msg || '出错啦！');
                }
            }),
            filter(json => json.code === 0),
            map(json => json.data)
        );
    }

    /**
     * 导入人员
     * @param data 参数
     */
    examYearImportPsn(data: any) {
        const url = 'api/gl-service-data-civil/v1/data/annual/assess/data/importCustomPerson';
        return this.http.post<R>(url, data).pipe(
            tap(json => {
                if (json.code !== 0) {
                    this.message.error(json.msg || '出错啦！');
                } else {
                    this.message.success('导入成功！');
                }
            }),
            filter(json => json.code === 0),
            map(json => json.data)
        );
    }

    /**
     * 删除人员
     * @param data 参数
     */
    examYearDeletePsn(data: any) {
        const url = 'api/gl-service-data-civil/v1/data/annual/assess/data/delete';
        return this.http.post<R>(url, data).pipe(
            tap(json => {
                if (json.code !== 0) {
                    this.message.error(json.msg || '出错啦！');
                } else {
                    this.message.success('删除成功！');
                }
            }),
            filter(json => json.code === 0),
            map(json => json.data)
        );
    }

    /**
     * 查询人员
     * @param data 参数
     */
    queryPersonList(data) {
        const url = 'api/gl-service-data-civil-career/v1/data/person/a01/selectListByQuery';
        return this.http.post<R>(url, data).pipe(
            tap(json => {
                if (json.code !== 0) {
                    this.message.error(json.msg);
                }
            }),
            filter(json => json.code === 0),
            map(json =>
                json.data
                    .filter((_, index) => index < 10)
                    .map(item => {
                        return {
                            ...item,
                            text: `${item.A0101}【${item.A0104_CN}】`,
                            value: item.DATA_1002_PERSON_A01_ID,
                        };
                    })
            )
        );
    }
    /**
     * 查询人员定位
     * @param data 参数
     */
    queryPersonRowNumber(data) {
        const url = 'api/gl-service-data-civil-career/v1/data/person/a01/selectByQueryForRowNumber';
        return this.http.post<R>(url, data).pipe(
            tap(json => {
                if (json.code === 1) {
                    this.message.error(json.msg);
                }
            }),
            filter(json => json.code === 0),
            map(json => json.data.ROWNUMBER - 1)
        );
    }

    /**
     * 上报主管
     * @param data 参数
     */
    examYearSubmitManager(data: any) {
        const url = 'api/gl-service-data-civil/v1/data/annual/assess/relation/submitManager';
        return this.http.post<R>(url, data).pipe(
            tap(json => {
                if (json.code !== 0) {
                    this.message.error(json.msg || '出错啦！');
                } else {
                    this.message.success('成功上报！');
                }
            }),
            filter(json => json.code === 0),
            map(json => json.data)
        );
    }
    /**
     * 人社保存数据
     * @param data 参数
     */
    examYearSubmitHumen(data: any) {
        const url = 'api/gl-service-data-civil/v1/data/annual/assess/relation/submitHumen';
        return this.http.post<R>(url, data).pipe(
            tap(json => {
                if (json.code !== 0) {
                    this.message.error(json.msg || '出错啦！');
                } else {
                    this.message.success('成功上报！');
                }
            }),
            filter(json => json.code === 0),
            map(json => json.data)
        );
    }

    /**
     * 批量修改字段
     * @param data 参数
     */
    examYearBatchField(data: any) {
        const url = 'api/gl-service-data-civil/v1/data/annual/assess/data/batchUpdateField';
        return this.http.post<R>(url, data).pipe(
            tap(json => {
                if (json.code !== 0) {
                    this.message.error(json.msg || '出错啦！');
                }
            }),
            filter(json => json.code === 0),
            map(json => json.data)
        );
    }

    /**
     * 获取审批单位列表
     * @param data 参数
     */
    examYearSelectList(data: any) {
        const url =
            'api/gl-service-data-civil/v1/data/annual/assess/relation/selectListByRelationId';
        return this.http.post<R>(url, data).pipe(
            tap(json => {
                if (json.code !== 0) {
                    this.message.error(json.msg || '出错啦！');
                }
            }),
            filter(json => json.code === 0),
            map(json => json.data)
        );
    }

    /**
     * 单人审批
     * @param data 参数
     */
    examYearAudit(data: any) {
        const url = 'api/gl-service-data-civil/v1/data/annual/assess/relation/update';
        return this.http.post<R>(url, data).pipe(
            tap(json => {
                if (json.code !== 0) {
                    this.message.error(json.msg || '出错啦！');
                }
            }),
            filter(json => json.code === 0),
            map(json => json.data)
        );
    }

    /**
     * 批量审批
     * @param data 参数
     */
    examYearBatchAudit(data: any) {
        const url = 'api/gl-service-data-civil/v1/data/annual/assess/relation/batchUpdate';
        return this.http.post<R>(url, data).pipe(
            tap(json => {
                if (json.code !== 0) {
                    this.message.error(json.msg || '出错啦！');
                }
            }),
            filter(json => json.code === 0),
            map(json => json.data)
        );
    }

    /**
     * 修改考核状态
     * @param data 参数
     */
    examYearUpdate(data: any) {
        const url = 'api/gl-service-data-civil/v1/data/annual/assess/data/update';
        return this.http.post<R>(url, data).pipe(
            tap(json => {
                if (json.code !== 0) {
                    this.message.error(json.msg || '出错啦！');
                } else {
                    this.message.success('修改成功！');
                }
            }),
            filter(json => json.code === 0),
            map(json => json.data)
        );
    }

    //#endregion

    //#region 附件
    /**
     * 保存附件信息
     * @param data 附件信息
     */
    examYearFileInsert(data: any) {
        const url = 'api/gl-service-data-civil/v1/data/annual/assess/annex/insert';
        return this.http.post<R>(url, data).pipe(
            tap(json => {
                if (json.code !== 0) {
                    this.message.error(json.msg || '出错啦！');
                }
            }),
            filter(json => json.code === 0),
            map(json => json.data)
        );
    }

    /**
     * 查询附件列表
     * @param data 批次Id
     */
    examYearFileList(data: any) {
        const url = 'api/gl-service-data-civil/v1/data/annual/assess/annex/selectListByBatch';
        return this.http.post<R>(url, data).pipe(
            tap(json => {
                if (json.code !== 0) {
                    this.message.error(json.msg || '出错啦！');
                }
            }),
            filter(json => json.code === 0),
            map(json =>
                json.data.map(x => {
                    return {
                        ...x,
                        operFiles: x,
                        name: x.ASSESS_NAEM,
                        fileName: x.ASSESS_NAEM,
                        fileId: x.ASSESS_ID,
                        size: x.ASSESS_SIZE,
                        filetypeType: x.ASSESS_TYPE,
                        url: `api/gl-file-service/attachment/${x.ASSESS_ID}?fileName=${x.ASSESS_NAEM}`,
                    };
                })
            )
        );
    }

    /**
     * 删除附件信息
     * @param data 附件Id
     */
    examYearFileDelete(data: any) {
        const url = 'api/gl-service-data-civil/v1/data/annual/assess/annex/delete';
        return this.http.post<R>(url, data).pipe(
            tap(json => {
                if (json.code !== 0) {
                    this.message.error(json.msg || '出错啦！');
                } else {
                    this.message.success('删除成功！');
                }
            }),
            filter(json => json.code === 0),
            map(json => json.data)
        );
    }
    //#endregion
}
