import {
    Component,
    OnInit,
    Input,
    ViewChild,
    ElementRef,
    AfterViewInit,
    OnDestroy,
    ChangeDetectorRef,
} from '@angular/core';
import { PersonSalaryService } from './person-salary.service';
import { forkJoin, fromEvent } from 'rxjs';
import { debounceTime } from 'rxjs/operators';

@Component({
    // tslint:disable-next-line:component-selector
    selector: 'p-person-salary',
    templateUrl: './person-salary.component.html',
    styleUrls: ['./person-salary.component.scss'],
})
export class PersonSalaryComponent implements OnInit, AfterViewInit, OnDestroy {
    /**
     * 人员基本信息
     */
    _personBaseInfo: any = { A01: {} };
    @Input() set personBaseInfo(v) {
        if (v) {
            this._personBaseInfo = v;
            /**加载人员数据 */
            this.personTab.selectChange(0);
        }
    }
    get personBaseInfo() {
        return this._personBaseInfo;
    }
    constructor(private service: PersonSalaryService, private cdr: ChangeDetectorRef) {}

    /**页面等待 */
    pageLoading = false;
    @ViewChild('A01Temp', { static: false }) private A01TempElement: ElementRef;
    @ViewChild('TableTemp', { static: false }) private TableTempElement: ElementRef;
    @ViewChild('JBTTemp', { static: false }) private JBTTempElement: ElementRef;
    /**顶部tab条 */
    personTab = {
        index: -1,
        list: [],
        selectChange: index => {
            if (this.personTab.list.length <= 0 || !this.personBaseInfo) {
                return;
            }
            this.personTab.index = index;
            this.childTable.fileds = this.personTab.list[this.personTab.index].field;
            this.cdr.detectChanges();

            // 如果是A01 同时取GZA01
            if (
                this.personTab.list[this.personTab.index].value === 'A01' &&
                this.personBaseInfo['A01']
            ) {
                this.pageLoading = true;
                forkJoin(
                    this.service.getSetChildData('A01', this.personBaseInfo.DATA_PERSON_A01_ID),
                    this.service.getSetChildData('GZA01', this.personBaseInfo.DATA_PERSON_A01_ID)
                ).subscribe(res => {
                    const [A01, GZA01] = res;
                    this.pageLoading = false;
                    if (res) {
                        this.personBaseInfo.A01 = A01;
                        this.personBaseInfo.GZA01 = GZA01[0];
                        if (!this.personBaseInfo['GZDA07Last']) {
                            this.salaryTab.selectedIndexChange(0);
                        }
                    }
                });
                return;
            }

            if (!this.personBaseInfo[this.personTab.list[this.personTab.index].value]) {
                this.pageLoading = true;
                this.service
                    .getSetChildData(
                        this.personTab.list[this.personTab.index].value,
                        this.personBaseInfo.DATA_PERSON_A01_ID
                    )
                    .subscribe(res => {
                        this.pageLoading = false;
                        if (res) {
                            this.personBaseInfo[
                                this.personTab.list[this.personTab.index].value
                            ] = res;
                            if (!this.personBaseInfo['GZDA07Last']) {
                                this.salaryTab.selectedIndexChange(0);
                            }
                        }
                    });
            }
        },
    };

    /**人员基本信息表格 */
    childTable = {
        fileds: [],
        pageSize: 5,
        pageIndex: 1,
    };

    @ViewChild('GZDA07LastTemp', { static: false }) private GZDA07LastTempElement: ElementRef;
    @ViewChild('GZTableTemp', { static: false }) private GZTableTemp: ElementRef;
    /**工资信息Tab */
    salaryTab = {
        loading: false,
        index: 0,
        list: [],
        selectedIndexChange: index => {
            if (this.salaryTab.list.length <= 0) {
                return;
            }

            this.salaryTab.index = index;
            this.salaryTable.fileds = this.salaryTab.list[this.salaryTab.index].field;
            this.cdr.detectChanges();

            if (!this.personBaseInfo[this.salaryTab.list[this.salaryTab.index].value]) {
                switch (this.salaryTab.list[this.salaryTab.index].value) {
                    case 'GZDA07Last':
                        this.salaryTab.loading = true;
                        this.service
                            .getExcuteSituation(
                                this.personBaseInfo.DATA_PERSON_A01_ID,
                                this.personBaseInfo.A01.A0151
                            )
                            .subscribe(res => {
                                this.salaryTab.loading = false;
                                this.personBaseInfo[
                                    this.salaryTab.list[this.salaryTab.index].value
                                ] = res;
                            });
                        break;
                    default:
                        this.salaryTab.loading = true;
                        this.service
                            .getSetChildData(
                                this.salaryTab.list[this.salaryTab.index].value,
                                this.personBaseInfo.DATA_PERSON_A01_ID
                            )
                            .subscribe(res => {
                                this.salaryTab.loading = false;
                                this.personBaseInfo[
                                    this.salaryTab.list[this.salaryTab.index].value
                                ] = res;
                                this.evtResize();
                            });
                        break;
                }
            }
        },
    };

    /**工资基本变动表 */
    salaryTable = {
        pageIndex: 1,
        pageSize: 15,
        fileds: [],
        scorll: { x: '2000px', y: '1200px' },
    };

    @ViewChild('salaryHeight', { static: false }) private salaryHeightEl: ElementRef;
    ngOnInit() {
        fromEvent(window, 'resize').subscribe(() => this.evtResize());
    }

    ngAfterViewInit() {
        /**顶部tab条 */
        this.personTab.list = [
            {
                text: '人员基本信息',
                value: 'A01',
                el: this.A01TempElement,
                field: [],
            },
            {
                text: '学历信息',
                value: 'GZ01',
                el: this.TableTempElement,
                field: [
                    { text: '学历', item: 'GZ0101_CN' },
                    { text: '毕业时间', item: 'GZ0102', isTime: true },
                    { text: '毕业院校及专业', item: 'GZ0104' },
                    { text: '学制', item: 'GZ0105' },
                    { text: '学位', item: 'GZ0106_CN' },
                    { text: '教育类别', item: 'GZ0107_CN' },
                ],
            },
            {
                text: '岗位信息',
                value: 'GZ02',
                el: this.TableTempElement,
                field: [
                    { text: '任职时间', item: 'GZ0206', isTime: true },
                    { text: '岗位级别/技术岗等级', item: 'GZ0232_CN' },
                    { text: '津补贴岗位', item: 'GZ0233_CN' },
                    { text: '职务标识', item: 'GZ0203_CN' },
                    { text: '职务名称', item: 'GZ0209' },
                ],
            },
            {
                text: '高低定/处分',
                value: 'GZ09',
                el: this.TableTempElement,
                field: [
                    { text: '起薪时间', item: 'GZ0901', isTime: true },
                    { text: '办理时间', item: 'GZ0905', isTime: true },
                    { text: '高低定/处分类型', item: 'GZ0903_CN' },
                    { text: '高低定/处分值', item: 'GZ0904' },
                    { text: '变动依据', item: 'GZ0908' },
                    { text: '取消高低定/处分时间', item: 'GZ0902', isTime: true },
                ],
            },
            {
                text: '考核信息',
                value: 'GZ06',
                el: this.TableTempElement,
                field: [
                    { text: '考核年度', item: 'GZ0601' },
                    { text: '考核结果', item: 'GZ0602_CN' },
                    { text: '备注', item: 'GZ0603' },
                ],
            },
            {
                text: '津补贴信息',
                value: 'GZDA07Last',
                el: this.JBTTempElement,
                field: [],
            },
        ];

        /**人员工资信息 */
        this.salaryTab.list = [
            {
                text: '现执行情况',
                value: 'GZDA07Last',
                el: this.GZDA07LastTempElement,
                field: [],
            },
            {
                text: '工资演算情况',
                value: 'GZDA07',
                el: this.GZTableTemp,
                field: [
                    { text: '起薪时间', item: 'GZ0704', isTime: true },
                    { text: '办理时间', item: 'GZ0704', isTime: true },
                    { text: '变动原因', item: 'GZ0702' },
                    { text: '岗位级别/技术工等级', items: ['GZ0710_CN', 'GZ0708_CN'] },
                    { text: '薪级/岗位等次', items: ['GZ0711_CN', 'GZ0709_CN'] },
                    { text: '岗位工资', item: 'GZ0719' },
                    { text: '薪级工资/技术工等级工资', items: ['GZ0720_CN', 'GZ0721_CN'] },
                    { text: '试用期工资', item: 'GZ0723' },
                    { text: '提高10%工资', item: 'GZ0729' },
                    { text: '津补贴合计', item: 'GZ0724' },
                    { text: '工资合计', item: 'GZ0734' },
                    { text: '增资额', item: 'GZ0742' },
                    { text: '补发月数', item: 'GZ0745' },
                    { text: '补发额', item: 'GZ0746' },
                    { text: '薪级起考年度', item: 'GZ0727' },
                ],
                widthConfig: [
                    '60px',
                    '100px',
                    '100px',
                    '100px',
                    '160px',
                    '120px',
                    '120px',
                    '180px',
                    '100px',
                    '120px',
                    '100px',
                    '100px',
                    '100px',
                    '100px',
                    '100px',
                    '100px',
                ],
            },
            {
                text: '业务记录情况',
                value: 'GZDA07',
                el: this.GZTableTemp,
                field: [
                    { text: '起薪时间', item: 'GZDA0704', isTime: true },
                    { text: '办理时间', item: 'GZDA0704', isTime: true },
                    { text: '变动原因', item: 'GZDA0702' },
                    { text: '岗位级别/技术工等级', items: ['GZDA0710_CN', 'GZDA0708_CN'] },
                    { text: '薪级/岗位等次', items: ['GZDA0711_CN', 'GZDA0709_CN'] },
                    { text: '岗位工资', item: 'GZDA0719' },
                    { text: '薪级工资/技术工等级工资', items: ['GZDA0720_CN', 'GZDA0721_CN'] },
                    { text: '试用期工资', item: 'GZDA0723' },
                    { text: '提高10%工资', item: 'GZDA0729' },
                    { text: '津补贴合计', item: 'GZDA0724' },
                    { text: '工资合计', item: 'GZDA0730' },
                    { text: '增资额', item: 'GZDA0742' },
                    { text: '补发月数', item: 'GZDA0745' },
                    { text: '补发额', item: 'GZDA0744' },
                    { text: '薪级起考年度', item: 'GZDA0727' },
                ],
                widthConfig: [
                    '60px',
                    '100px',
                    '100px',
                    '100px',
                    '160px',
                    '120px',
                    '120px',
                    '180px',
                    '100px',
                    '120px',
                    '100px',
                    '100px',
                    '100px',
                    '100px',
                    '100px',
                    '100px',
                ],
            },
            {
                text: '06年套改情况',
                value: 'GZ10',
                el: this.GZTableTemp,
                field: [
                    { text: '套改方法', item: 'GZ1001' },
                    { text: '套改年限', item: 'GZ1002' },
                    { text: '任职年限', item: 'GZ1003' },
                    { text: '岗位级别/技术工等级', items: ['GZ1009_CN', 'GZ1007_CN'] },
                    { text: '薪级/岗位等次', items: ['GZ1010_CN', 'GZ1008_CN'] },
                    { text: '岗位工资', item: 'GZ1013' },
                    { text: '薪级工资/技术工等级工资', items: ['GZ1014_CN', 'GZ1015_CN'] },
                ],
                widthConfig: [
                    '60px',
                    '100px',
                    '100px',
                    '100px',
                    '160px',
                    '120px',
                    '120px',
                    '100px',
                    '100px',
                ],
            },
        ];
    }

    ngOnDestroy() {}

    /** 设置表格滚动高度 */
    evtResize() {
        this.salaryTable.scorll.y = `${this.salaryHeightEl.nativeElement.offsetHeight - 110}px`;
    }
}
