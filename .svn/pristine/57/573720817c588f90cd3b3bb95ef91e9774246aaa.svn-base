import { NzMessageService } from 'ng-zorro-antd/message';
import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { R } from 'app/entity/vo/R';
import { filter, map, tap } from 'rxjs/operators';

@Injectable({
    providedIn: 'root',
})
export class WorkbenchService {
    constructor(private http: HttpClient, private message: NzMessageService) {}

    /**
     * 加载办理业务列表
     * @param data 参数
     */
    getWfList(data) {
        const url = 'api/gl-1002-workflow-core/v1/workflow/workbench/info/getWfList';
        return this.http.post<R>(url, data).pipe(
            tap(json => {
                if (json.code !== 0) {
                    this.message.error(json.msg);
                }
            }),
            filter(json => json.code === 0),
            map(json => json.data)
        );
    }

    /**
     * 获得业务主表信息
     * @param wfId 业务编码
     */
    getWfMainData(wfId: string) {
        const url = 'api/gl-1002-workflow-core/v1/workflow/main/detail';
        return this.http.get<R>(`${url}/${wfId}`).pipe(
            tap(json => {
                if (json.code !== 0) {
                    this.message.error(json.msg);
                }
            }),
            filter(json => json.code === 0),
            map(json => json.data)
        );
    }

    /**
     * 获取代管的单位
     */
    getAgentOrgList(id) {
        const url = 'api/gl-service-sys-user/v1/user/system/agent/unit/selectAgentUnit';
        return this.http
            .post<R>(url, { USER_ID: id })
            .pipe(
                tap(json => {
                    if (json.code !== 0) {
                        this.message.error(json.msg);
                    }
                }),
                filter(json => json.code === 0),
                map(json => json.data)
            );
    }

    /**
     * 终止业务
     * @param data 参数
     */
    stopOper(data) {
        const array = data.wfId.split('_');
        const url = `api/gl-workflow-${array.join('-')}/v1/workflow/${data.wfId
            .split('_')
            .join('/')}/job/stop`;
        return this.http.post<R>(url, data).pipe(
            tap(json => {
                if (json.code !== 0) {
                    this.message.error(json.msg);
                } else {
                    this.message.success('业务终止成功。');
                }
            }),
            filter(json => json.code === 0),
            map(json => json.data)
        );
    }
}
