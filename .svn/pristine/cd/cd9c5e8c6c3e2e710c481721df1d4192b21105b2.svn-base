import { AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';
import { ActivatedRoute, ParamMap, Router } from '@angular/router';
import { ClientService } from 'app/master-page/client/client.service';
import { Base64 } from 'js-base64';
import { ExamYearService } from '../exam-year.service';

@Component({
    selector: 'app-exam-year-manager',
    templateUrl: './exam-year-manager.component.html',
    styleUrls: ['./exam-year-manager.component.scss'],
})
export class ExamYearManagerComponent implements OnInit, OnDestroy, AfterViewInit {
    operInfo: any;

    state = <any>{
        DB: false,
        YTJ: false,
        YWC: false,
        YZF: false,
    };
    isHuman = false;

    // @ViewChild('oneStepTemplate', { static: false }) private oneStepTemplate: ElementRef;
    // @ViewChild('twoStepTemplate', { static: false }) private twoStepTemplate: ElementRef;
    @ViewChild('threeStepTemplate', { static: false }) private threeStepTemplate: ElementRef;
    transactionStepsIfy = {
        index: -1,
        list: [
            // {
            //     text: '业务申报',
            //     template: null
            // },
            {
                text: '查看表册',
                template: null,
            },
        ],
        evtStepChange: event => {
            this.transactionStepsIfy.index = event;
            switch (event) {
                // case 0:
                //     if (!this.transactionStepsIfy.list[event].template) {
                //         this.transactionStepsIfy.list[event].template = this.oneStepTemplate;
                //     }
                //     break;
                case 0:
                    if (!this.transactionStepsIfy.list[event].template) {
                        this.transactionStepsIfy.list[event].template = this.threeStepTemplate;
                    }
                    break;
                // case 1:
                //     if (!this.transactionStepsIfy.list[event].template) {
                //         this.transactionStepsIfy.list[event].template = this.threeStepTemplate;
                //     }
                //     break;
            }
        },
    };

    constructor(
        private clientService: ClientService,
        private router: Router,
        private activatedRoute: ActivatedRoute,
        private service: ExamYearService
    ) {}

    ngOnInit() {
        this.loadBreadcrumbNav();
        this.loadRouterParams();
    }

    ngAfterViewInit() {
        this.transactionStepsIfy.evtStepChange(0);
    }

    ngOnDestroy() {
        this.clientService.clearBreadCrumb();
    }

    loadBreadcrumbNav() {
        this.clientService.buildBreadCrumb([
            {
                type: 'home',
            },
            {
                type: 'event',
                text: '年度考核工作台',
                event: () => {
                    this.router.navigate(['/client/person-correl/exam-year/workflow']);
                },
            },
            {
                type: 'text',
                text: '年度考核部署',
            },
        ]);
    }

    private loadRouterParams() {
        // 获取路由参数
        this.activatedRoute.paramMap.subscribe(async (params: ParamMap) => {
            // 判断路由参数是否存在
            if (params.has('GL')) {
                this.operInfo = JSON.parse(Base64.decode(params.get('GL')));
            }

            if (params.has('state')) {
                this.state = JSON.parse(Base64.decode(params.get('state')));
            }

            if (params.has('isHuman')) {
                this.isHuman = !!params.get('isHuman');
            }
        });
    }

    /** 选择上报单位 */
    submitManager() {
        // this.previewElement.setAuditUnitIfy.open();
        const data = {
            ANNUAL_ASSESS_RELATION_ID: this.operInfo.ANNUAL_ASSESS_RELATION_ID,
        };
        this.service
            .examYearSubmitManager(data)
            .subscribe(res => this.router.navigate(['/client/person-correl/exam-year/workflow']));
    }

    submitHumen() {
        // this.previewElement.setAuditUnitIfy.open();
        const data = {
            ANNUAL_ASSESS_RELATION_ID: this.operInfo.ANNUAL_ASSESS_RELATION_ID,
        };
        this.service
            .examYearSubmitHumen(data)
            .subscribe(res => this.router.navigate(['/client/person-correl/exam-year/workflow']));
    }
}
