import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { R } from 'app/entity/vo/R';
import { CommonService } from 'app/util/common.service';
import { environment } from 'environments/environment';
import { NzMessageService } from 'ng-zorro-antd/message';
import { filter, map, tap } from 'rxjs/operators';

@Injectable({
    providedIn: 'root',
})
export class CareerPersonSalaryService {
    constructor(
        private http: HttpClient,
        private message: NzMessageService,
        private commonService: CommonService
    ) {}

    /**
     * 获得人员库已经统计
     */
    selectListByA0103Count(data) {
        const url = 'api/gl-service-data-career/v1/data/person/a01/selectListByA0103Count';
        return this.http.post<R>(url, data).pipe(
            tap(json => {
                if (json.code === 1) {
                    this.message.error(json.msg);
                }
            }),
            filter(json => json.code === 0),
            map(json =>
                json.data.map(item => ({
                    ...item,
                    label: item.A0103_CN,
                    text: item.A0103_CN,
                    value: item.A0103,
                }))
            )
        );
    }

    /**
     * 获得人员数据
     * @param id 编码
     */
    getPersonDataPage(params) {
        const url = `api/gl-service-data-career/v1/data/person/a01/selectPageByOrgId`;
        return this.http.post<R>(url, params).pipe(
            tap(json => {
                if (json.code === 1) {
                    this.message.error(json.msg);
                }
            }),
            filter(json => json.code === 0),
            map(json => json.data)
        );
    }

    /**
     * 查询人员定位
     * @param data 参数
     */
    queryPersonRowNumber(data) {
        const url = 'api/gl-service-data-career/v1/data/person/a01/selectByQueryForRowNumber';
        return this.http.post<R>(url, data).pipe(
            tap(json => {
                if (json.code === 1) {
                    this.message.error(json.msg);
                }
            }),
            filter(json => json.code === 0),
            map(json => json.data.ROWNUMBER - 1)
        );
    }

    /**
     * 查询人员
     * @param data 参数
     */
    queryPersonList(data) {
        const url = 'api/gl-service-data-career/v1/data/person/a01/selectListByQuery';
        return this.http.post<R>(url, data).pipe(
            tap(json => {
                if (json.code !== 0) {
                    this.message.error(json.msg);
                }
            }),
            filter(json => json.code === 0),
            map(json =>
                json.data
                    .filter((_, index) => index < 10)
                    .map(item => {
                        return {
                            ...item,
                            label: `${item.A0101}【${item.A0104_CN}】`,
                            value: item.DATA_PERSON_A01_ID,
                        };
                    })
            )
        );
    }

    /**
     * 输出excel
     */
    outputExcelByOrgId(data) {
        const url = 'api/gl-service-data-career/v1/data/person/a01/outputExcelByOrgId';
        this.commonService.downFilePost(url, data);
    }
    /**
     * 获取业务列表
     */
    selectByWfId(wfId) {
        const url = `api/gl-1002-workflow-core/v1/workflow/workbench/info/selectByWfId/${wfId}`;
        return this.http.get<R>(url).pipe(
            filter(json => json.code === 0),
            map(json => json.data)
        );
    }

    /**
     * 获得业务权限
     */
    getAuthWfId() {
        return new Promise((resolve, reject) => {
            const authwf = sessionStorage.getItem(environment.config.PROJECT_PATH_ROOT + '_wf');
            if (authwf) {
                resolve(JSON.parse(authwf));
            } else {
                const url =
                    'api/gl-service-sys-user/v1/user/system/user/auth/flow/selectListByAuthFlow';
                this.http
                    .post<R>(url, null)
                    .pipe(
                        tap(json => {
                            if (json.code !== 0) {
                                this.message.error('加载业务权限异常。');
                            } else {
                                sessionStorage.setItem(
                                    environment.config.PROJECT_PATH_ROOT + '_wf',
                                    JSON.stringify(json.data)
                                );
                            }
                        }),
                        map(json => json.data)
                    )
                    .subscribe(result => resolve(result));
            }
        });
    }
}
