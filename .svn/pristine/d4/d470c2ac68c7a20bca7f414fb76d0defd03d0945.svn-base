import {
    AfterViewInit,
    ChangeDetectorRef,
    Component,
    forwardRef,
    Input,
    OnInit,
} from '@angular/core';
import { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';
import * as moment from 'moment';

@Component({
    // tslint:disable-next-line:component-selector
    selector: 'datetime-input',
    templateUrl: './datetime-input.component.html',
    styleUrls: ['./datetime-input.component.scss'],
    providers: [
        {
            provide: NG_VALUE_ACCESSOR,
            useExisting: forwardRef(() => DatetimeInputComponent),
            multi: true,
        },
    ],
})
export class DatetimeInputComponent implements ControlValueAccessor, OnInit, AfterViewInit {
    @Input() disabled = false;
    @Input() placeholder = '请输入日期';

    // 定义ControlValueAccessor提供的事件回调
    value: string;
    onChange: (value: string | string[]) => void = () => null;
    onTouched: () => void = () => null;

    constructor(private cdr: ChangeDetectorRef) {}

    ngOnInit() {}

    ngAfterViewInit(): void {}

    writeValue(obj: any): void {
        if (moment(obj, 'YYYYMMDD').isValid()) {
            this.value = moment(obj, 'YYYYMMDD').format('YYYY-MM-DD');
        } else {
            this.value = null;
        }
    }

    registerOnChange(fn: any): void {
        this.onChange = fn;
    }

    registerOnTouched(fn: any): void {
        this.onTouched = fn;
    }

    setDisabledState?(isDisabled: boolean): void {
        this.disabled = isDisabled;
        this.placeholder = '';
        this.cdr.markForCheck();
    }

    keyUp(event) {
        event.target.value = event.target.value.replace(/[\u4E00-\u9FA5]/g, '');
    }

    /**
     * 格式化代码
     */
    formatDataTime(event) {
        const value = event.target.value;
        if (moment(value, 'YYYYMMDD').isValid()) {
            this.value = moment(value, 'YYYYMMDD').format('YYYY-MM-DD');
            event.target.value = this.value;
        } else {
            this.value = null;
            event.target.value = null;
        }
        this.onChange(this.value);
        this.cdr.markForCheck();
    }
}
